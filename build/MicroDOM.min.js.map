{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/./src/helpers.ts","webpack://[name]/./src/MicroDOM.ts","webpack://[name]/./src/index.ts","webpack://[name]/./src/entry.ts","webpack://[name]/webpack/bootstrap","webpack://[name]/webpack/startup","webpack://[name]/webpack/runtime/define property getters","webpack://[name]/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","self","getEls","target","els","arr","el","nodes","querySelectorAll","push","Element","recursiveAppend","content","entity","Array","isArray","append","MicroDOM","args","super","newInstance","this","length","document","entities","createElement","Object","tagName","innerHTML","text","textContent","classes","classList","add","remove","classname","toggle","reqtForAll","number","contains","type","listener","options","addEventListener","removeEventListener","obj","key","style","setAttribute","cbs","current","shift","setTimeout","nextTick","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"MicroDOM.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MicroDOM\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MicroDOM\"] = factory();\n\telse\n\t\troot[\"MicroDOM\"] = factory();\n})(self, function() {\nreturn ","import { I_MicroDOM } from \"./types\";\n\nexport function getEls(target: Element | Document, ...els: Array<string | Element>): Element[] {\n  const arr: Element[] = [];\n\n  for (const el of els) {\n    if (typeof el === 'string') {\n      const nodes = target.querySelectorAll(el);\n      arr.push(...nodes);\n    } else if (el instanceof Element) {\n      arr.push(el);\n    }\n  }\n\n  return arr;\n}\n\nexport function recursiveAppend<T extends Element = Element>(el: Element, ...content: Array<string | Element> | I_MicroDOM<T>) {\n  for (const entity of content) {\n    if (Array.isArray(entity)) {\n      recursiveAppend(el, ...entity);\n    } else {\n      el.append(entity);\n    }\n  }\n}","import { getEls, recursiveAppend } from \"./helpers\";\nimport { I_MicroDOM } from \"./types\";\n\nexport default class MicroDOM<T extends Element = Element> extends Array implements I_MicroDOM<T> {\n  constructor(...args) {\n    super(...args);\n  }\n\n  get(...args: Array<string | Element>): I_MicroDOM<T> {\n    let newInstance = new MicroDOM;\n\n    if (this.length) {\n      for (const el of this) {\n        newInstance.push(...getEls(el, ...args));\n      }\n    } else {\n      newInstance.push(...getEls(document, ...args));\n    }\n\n    return newInstance;\n  }\n\n  create<TagName extends keyof HTMLElementTagNameMap>(...entities: Array<\n    TagName |\n    {\n      tagName?: TagName,\n      content?: string | Element | Array<string | Element> | I_MicroDOM<T>\n    }\n  >): I_MicroDOM<T> {\n    let newInstance = new MicroDOM;\n\n    for (const entity of entities) {\n      if (typeof entity === 'string') {\n        newInstance.push(document.createElement(entity));\n      } else if (entity instanceof Object) {\n        const el = document.createElement(entity.tagName || 'div');\n        if (entity.content) {\n          if (Array.isArray(entity.content)) {\n            recursiveAppend<T>(el, ...entity.content)\n          } else {\n            recursiveAppend<T>(el, entity.content)\n          }\n        }\n        newInstance.push(el)\n      }\n    }\n\n    return newInstance;\n  }\n\n  empty(): I_MicroDOM<T> {\n    for (const el of this) {\n      (el as Element).innerHTML = '';\n    }\n\n    return this;\n  }\n\n  text(text: string): I_MicroDOM<T> {\n    for (const el of this) {\n      (el as Element).textContent = text;\n    }\n\n    return this;\n  }\n\n  append(...append: Array<string | Element> | I_MicroDOM<T>): I_MicroDOM<T> {\n    for (const el of this) {\n      recursiveAppend(el, ...append);\n    }\n\n    return this;\n  }\n\n  addClass(...classes: string[]): I_MicroDOM<T> {\n    for (const el of this) {\n      el.classList.add(...classes);\n    }\n\n    return this;\n  }\n\n  removeClass(...classes: string[]): I_MicroDOM<T> {\n    for (const el of this) {\n      el.classList.remove(...classes);\n    }\n\n    return this;\n  }\n\n  toggleClass(classname: string): I_MicroDOM<T> {\n    for (const el of this) {\n      el.classList.toggle(classname);\n    }\n\n    return this;\n  }\n\n  hasClass(classname: string, reqtForAll: boolean = false): boolean {\n    if (reqtForAll) { // The presence of a class for each element of the set\n      let number = 0;\n      for (const el of this) {\n        if ((el as T).classList.contains(classname)) {\n          number++;\n        }\n      }\n      return number === this.length;\n    } else {          // the presence of a class for at least one element of the set\n      for (const el of this) {\n        if ((el as T).classList.contains(classname)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): I_MicroDOM<T> {\n    for (const el of this) {\n      (el as T).addEventListener(type, listener, options);\n    }\n\n    return this;\n  }\n\n  removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): I_MicroDOM<T> {\n    for (const el of this) {\n      (el as T).removeEventListener(type, listener, options);\n    }\n\n    return this;\n  }\n\n  css(obj: object): I_MicroDOM<T> {\n    for (const el of this) {\n      for (const key in obj) {\n        (el as HTMLElement).style[key] = obj[key];\n      }\n    }\n\n    return this;\n  }\n\n  attr(obj: object): I_MicroDOM<T> {\n    for (const el of this) {\n      for (const key in obj) {\n        el.setAttribute(key, obj[key]);\n      }\n    }\n\n    return this;\n  }\n\n  nextTick(...cbs: Function[]): I_MicroDOM<T> {\n    const arr = cbs;\n    const current = cbs.shift();\n    \n    current && setTimeout(() => {\n      current();\n\n      if (arr.length) {\n        this.nextTick(...arr);\n      }\n    }, 0);\n\n    return this;\n  }\n}","import _ from \"./entry\";\n\nexport default _;\n\n// ===\n\nimport MicroDOM from \"./MicroDOM\";\nimport { I_MicroDOM } from \"./types\";\n\nexport {\n  MicroDOM,\n\n  I_MicroDOM\n};","import { getEls } from \"./helpers\";\nimport MicroDOM from \"./MicroDOM\";\nimport { I_MicroDOM } from \"./types\";\n\nexport default function _<T extends Element = Element>(...args: Array<string | Element>): I_MicroDOM<T> {\n  if (args instanceof MicroDOM) {\n    return args;\n  }\n\n  return new MicroDOM<T>(...getEls(document, ...args));\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(867);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}