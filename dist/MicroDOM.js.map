{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/./src/helpers.ts","webpack://[name]/./src/MicroDOM.ts","webpack://[name]/./src/entry.ts","webpack://[name]/./src/index.ts","webpack://[name]/webpack/bootstrap","webpack://[name]/webpack/runtime/define property getters","webpack://[name]/webpack/runtime/hasOwnProperty shorthand","webpack://[name]/webpack/startup"],"names":[],"mappings":"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","file":"MicroDOM.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MicroDOM\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MicroDOM\"] = factory();\n\telse\n\t\troot[\"MicroDOM\"] = factory();\n})(self, function() {\nreturn ","import { I_MicroDOM } from \"./types\";\n\nexport function getEls<T extends Element = Element>(target: Element | Document, ...els: Array<string | Element>): T[] {\n  const arr: T[] = [];\n\n  for (const el of els) {\n    if (typeof el === 'string') {\n      const nodes: NodeListOf<T> = target.querySelectorAll(el);\n      arr.push(...nodes);\n    } else if (el instanceof Element) {\n      arr.push(el as T);\n    }\n  }\n\n  return arr;\n}\n\nexport function recursiveAppend<T extends Element = Element>(el: Element, ...content: Array<string | Element> | I_MicroDOM<T>) {\n  for (const entity of content) {\n    if (Array.isArray(entity)) {\n      recursiveAppend(el, ...entity);\n    } else {\n      el.append(entity);\n    }\n  }\n}\n\n\nexport function nextTick(...cbs: Function[]): void {\n  const arr = cbs;\n  const current = cbs.shift();\n  \n  current && setTimeout(() => {\n    current();\n\n    if (arr.length) {\n      nextTick(...arr);\n    }\n  }, 0);\n\n  return this;\n}","import { getEls, nextTick, recursiveAppend } from \"./helpers\";\nimport { I_MicroDOM } from \"./types\";\n\nexport default class MicroDOM<T extends Element = Element> extends Array<T> implements I_MicroDOM<T> {\n  constructor(...args) {\n    super(...args);\n  }\n\n\n  /**\n   * Returns a new instance containing the elements with the passed selectors and elements (or from the document if the current instance is empty)\n   */\n  get<U extends Element = Element>(...args: Array<string | Element>): I_MicroDOM<U> {\n    let newInstance: I_MicroDOM<U> = new MicroDOM<U>();\n\n    if (this.length) {\n      for (const el of this) {\n        newInstance.push(...getEls<U>(el, ...args));\n      }\n    } else {\n      newInstance.push(...getEls<U>(document, ...args));\n    }\n\n    return newInstance;\n  }\n\n\n  /**\n   * Returns a new instance with new created elements according to the passed parameters\n   */\n  create<U extends Element = Element>(...entities: Array<\n    string |\n    {\n      tagName?: string,\n      content?: string | Element | Array<string | Element> | I_MicroDOM<T>\n    }\n  >): I_MicroDOM<U> {\n    let newInstance: I_MicroDOM<U> = new MicroDOM<U>();\n\n    for (const entity of entities) {\n      if (typeof entity === 'string') {\n        newInstance.push(document.createElement(entity) as unknown as U);\n      } else if (entity instanceof Object) {\n        const el = document.createElement(entity.tagName || 'div') as unknown as U;\n        if (entity.content) {\n          if (Array.isArray(entity.content)) {\n            recursiveAppend<T>(el, ...entity.content)\n          } else {\n            recursiveAppend<T>(el, entity.content)\n          }\n        }\n        newInstance.push(el)\n      }\n    }\n\n    return newInstance;\n  }\n\n\n  /**\n   * Clears the contents of each element in the set and returns the instance itself\n   */\n  empty(): I_MicroDOM<T> {\n    this.forEach(el => (el as Element).innerHTML = '');\n\n    return this;\n  }\n\n\n  /**\n   * Sets the textContent property for each collection item and returns an instance\n   */\n  text(text?: string): I_MicroDOM<T> {\n    this.forEach(el => el.textContent = text || '');\n\n    return this;\n  }\n\n\n  /**\n   * Inserts a set of Node objects or DOMString objects after the last child of each array element\n   */\n  append(...append: Array<string | Element> | I_MicroDOM<T>): I_MicroDOM<T> {\n    this.forEach(el => recursiveAppend(el, ...append));\n\n    return this;\n  }\n\n\n  /**\n   * Adds a class or classes to all array elements\n   */\n  addClass(...classes: string[]): I_MicroDOM<T> {\n    this.forEach(el => el.classList.add(...classes));\n\n    return this;\n  }\n\n\n  /**\n   * Removes a class or classes from all array elements\n   */\n  removeClass(...classes: string[]): I_MicroDOM<T> {\n    this.forEach(el => el.classList.remove(...classes));\n\n    return this;\n  }\n\n\n  /**\n   * Adds or removes a class for each element of the array, depending on its presence\n   */\n  toggleClass(classname: string): I_MicroDOM<T> {\n    this.forEach(el => el.classList.toggle(classname));\n\n    return this;\n  }\n\n\n  /**\n   * Determine if any of the agreed members are assigned to this class. Or, if you pass \"true\" as the second argument, then each element (default: reqtForAll = false)\n   */\n  hasClass(classname: string, reqtForAll: boolean = false): boolean {\n    if (reqtForAll) { // The presence of a class for each element of the set\n      let number = 0;\n      this.forEach(el => {\n        if ((el as T).classList.contains(classname)) {\n          number++;\n        }\n      })\n      return number === this.length;\n    } else {          // the presence of a class for at least one element of the set\n      for (const el of this) {\n        if ((el as T).classList.contains(classname)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n\n  /**\n   * Calls the \"addEventListener\" method for each set item\n   */\n  addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): I_MicroDOM<T> {\n    this.forEach(el => el.addEventListener(type, listener, options));\n\n    return this;\n  }\n\n\n  /**\n   * Calls the \"removeEventListener\" method for each set item\n   */\n  removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): I_MicroDOM<T> {\n    this.forEach(el => el.removeEventListener(type, listener, options));\n\n    return this;\n  }\n\n\n  /**\n   * Calls dispatchEvent with an event of the specified type for each item in the set\n   */\n  fireEvent(type: string): I_MicroDOM<T> {\n    this.forEach(el => el.dispatchEvent(new Event(type)));\n\n    return this;\n  }\n\n\n  /**\n   * Sets the style attribute property passed in the object by key\n   */\n  css(obj: object): I_MicroDOM<T> {\n    this.forEach(el => Object.keys(obj).forEach(key => (el as unknown as HTMLElement).style[key] = obj[key]));\n\n    return this;\n  }\n\n\n  /**\n   * Sets the attribute property passed in the object by key\n   */\n  attr(obj: object): I_MicroDOM<T> {\n    this.forEach(el => Object.keys(obj).forEach(key => el.setAttribute(key, obj[key])));\n\n    return this;\n  }\n\n\n  /**\n   * Recursively calls each passed function in a new setTimeout(() => {}, 0)\n   */\n  nextTick(...cbs: Function[]): I_MicroDOM<T> {\n    nextTick(...cbs);\n\n    return this;\n  }\n}","import { getEls } from \"./helpers\";\nimport MicroDOM from \"./MicroDOM\";\nimport { I_MicroDOM } from \"./types\";\n\nexport default function _<T extends Element = Element>(...args: Array<string | Element>): I_MicroDOM<T> {\n  if (args instanceof MicroDOM) {\n    return args;\n  }\n\n  return new MicroDOM<T>(...getEls<T>(document, ...args));\n}","import _ from \"./entry\";\n\nexport default _;\n\n// ===\n\nimport MicroDOM from \"./MicroDOM\";\nimport { nextTick } from \"./helpers\";\nimport { I_MicroDOM } from \"./types\";\n\nexport {\n  MicroDOM,\n  nextTick,\n\n  I_MicroDOM\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(867);\n"],"sourceRoot":""}